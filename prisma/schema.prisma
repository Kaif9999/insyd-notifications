generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String?
  
  blogs         Blog[]
  jobs          Job[]
  notifications Notification[]
  blogLikes     BlogLike[]
  jobApplications JobApplication[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Job {
  id           String   @id @default(cuid())
  title        String
  company      String
  authorId     String
  
  author       User             @relation(fields: [authorId], references: [id], onDelete: Cascade)
  applications JobApplication[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id        String   @id @default(cuid())
  title     String
  content   String
  authorId  String
  
  author    User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  likes     BlogLike[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id          String  @id @default(cuid())
  title       String
  content     String
  read        Boolean @default(false)
  recipientId String
  
  recipient User @relation(fields: [recipientId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlogLike {
  id     String @id @default(cuid())
  blogId String
  userId String
  
  blog Blog @relation(fields: [blogId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  
  @@unique([blogId, userId])
}

model JobApplication {
  id     String @id @default(cuid())
  jobId  String
  userId String
  
  job  Job  @relation(fields: [jobId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  
  @@unique([jobId, userId])
}
